---
  name: CI/CD
  on:
    push:
      branches:
        - dev
  env:
    AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: ca-central-1
  permissions:
    id-token: write
    contents: read
  
  jobs:
    test-codes:
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
        - name: Set up Node.js
          uses: actions/setup-node@v3
          with: 
            node-version: "18"
        - name: Install Dependencies
          run: |
            npm install
            npm install --save-dev jest jsdom
        - name: Run Tests
          run: npx jest

    Create-ECR-Repo:
      runs-on: ubuntu-latest
      needs: test-codes
      steps:
        - name: Log in to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
        - name: Check or Create ECR Repository
          id: ecr-check
          run: >
            REPO_NAME="${{ github.repository }}"
  
            REPO_EXISTS=$(aws ecr describe-repositories --repository-names $REPO_NAME --region $AWS_REGION 2>&1 || true)
  
  
            if echo "$REPO_EXISTS" | grep -q "RepositoryNotFoundException"; then
              echo "Repository does not exist. Creating repository $REPO_NAME..."
              aws ecr create-repository --repository-name $REPO_NAME --region $AWS_REGION
            else
              echo "Repository already exists."
              exit 0
            fi      

    Build_and_Publish:
      runs-on: ubuntu-latest
      needs: Create-ECR-Repo
      steps:
        - name: Checkout Code
          uses: actions/checkout@v3
        - name: Log in to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v1
        - name: Build and Push Docker Image
          uses: docker/build-push-action@v5
          with:
            context: .
            push: true
            tags: ${{ steps.login-ecr.outputs.registry }}/"${GITHUB_REPOSITORY,,}":1.0.0
  